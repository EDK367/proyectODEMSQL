/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controlSemantico.SemanticErrorException;
import java.awt.Color;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java_cup.runtime.Scanner;
import java_cup.runtime.Symbol;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;
import number.NumeroLinea;
import sintactico.Sintax;
import view.analisisLexico.analisisLex;

/**
 *
 * @author denil
 */
public class viewMain extends javax.swing.JFrame {

    NumeroLinea number;

    public viewMain() {
        initComponents();
        number = new NumeroLinea(txtEscritura);
        scrollEscritura.setRowHeaderView(number);
        number = new NumeroLinea(txtAnalisis);
        scrollAnalisis.setRowHeaderView(number);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        scrollAnalisis = new javax.swing.JScrollPane();
        txtAnalisis = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        lexicoButton = new javax.swing.JButton();
        sintacticoButton = new javax.swing.JButton();
        open = new javax.swing.JButton();
        scrollEscritura = new javax.swing.JScrollPane();
        txtEscritura = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(915, 688));
        setType(java.awt.Window.Type.POPUP);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(900, 650));
        jPanel1.setPreferredSize(new java.awt.Dimension(900, 650));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scrollAnalisis.setViewportView(txtAnalisis);

        jPanel1.add(scrollAnalisis, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 470, 900, 160));

        jPanel2.setBackground(new java.awt.Color(153, 255, 255));

        lexicoButton.setText("Lexico");
        lexicoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lexicoButtonActionPerformed(evt);
            }
        });

        sintacticoButton.setText("Sintactico");
        sintacticoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sintacticoButtonActionPerformed(evt);
            }
        });

        open.setText("Abrir Archivo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(open)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 622, Short.MAX_VALUE)
                .addComponent(sintacticoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lexicoButton))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lexicoButton)
                    .addComponent(sintacticoButton)
                    .addComponent(open)))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 50));

        scrollEscritura.setViewportView(txtEscritura);

        jPanel1.add(scrollEscritura, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 900, 400));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lexicoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lexicoButtonActionPerformed
        //generacion
        String cadena = txtEscritura.getText();
        String resultado = "";
        txtAnalisis.setForeground(Color.black);
        analisisLex lex = new analisisLex();
        resultado = lex.analisis(cadena);
        txtAnalisis.setText(resultado);
    }//GEN-LAST:event_lexicoButtonActionPerformed

    private void sintacticoButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String cadena = txtEscritura.getText();
        Sintax sintax = new Sintax(new LexerCup(new StringReader(cadena)));
        try {
            Symbol sym = sintax.parse();
            txtAnalisis.setText("Se ha resuelto de manera correcta");
            txtAnalisis.setForeground(Color.green);

            HashMap<Integer, List<Object>> map = sintax.getMap();
            System.out.println("Contenido del HashMap:");
            map.entrySet().forEach(entry -> {
                System.out.println(entry.getKey() + " = " + entry.getValue());
            });
            StyledDocument doc = txtAnalisis.getStyledDocument();
            Style defaultStyle = StyleContext.getDefaultStyleContext().getStyle(StyleContext.DEFAULT_STYLE);
            Style showStyle = doc.addStyle("showStyle", defaultStyle);
            StyleConstants.setForeground(showStyle, Color.BLUE);

            Style rowStyle = doc.addStyle("rowStyle", defaultStyle);
            StyleConstants.setForeground(rowStyle, Color.RED);

            Style tableStyle = doc.addStyle("tableStyle", defaultStyle);
            StyleConstants.setForeground(tableStyle, Color.BLACK);

            System.out.println("Contenido del Show");
            HashMap<String, List<Object>> mapShow = sintax.getMapShow();

           for (var entry : mapShow.entrySet()) {
                String table = entry.getKey();
                List<Object> show = entry.getValue();
                System.out.println(show);
                // Agregar texto de SHOW TABLES
                doc.insertString(doc.getLength(), "\nSHOW TABLES FROM DATABASE " + table + "\n", showStyle);
                // Agregar encabezados de la tabla
                doc.insertString(doc.getLength(), String.format("%-10s %-10s %-10s %-10s\n", "Tipo", "Nombre", "Atributos", "Base de Datos"), tableStyle);
                doc.insertString(doc.getLength(), "-----------------------------------------------------------\n", tableStyle);
                // Agregar contenido de la tabla
                for (Object row : show) {
                    List<Object> rowData = (List<Object>) row;
                    doc.insertString(doc.getLength(), String.format("%-10s %-20s %-10s %-10s\n",
                            rowData.get(1), rowData.get(2), rowData.get(3), rowData.get(4)), tableStyle);
                }
            }
           
        
        } catch (Exception ex) {
            // Verificar si la excepción es del tipo SemanticErrorException
            if (ex instanceof SemanticErrorException) {
                txtAnalisis.setText("Error semántico: " + ex.getMessage());
                txtAnalisis.setForeground(Color.red);
            } else {
                Symbol sym = sintax.getS();
                txtAnalisis.setText("La funcion esta mal escrita en (" + (sym.left + 1) + "," + (sym.right + 1) + ") El error es: "
                        + sym.value);
                txtAnalisis.setForeground(Color.red);
            }
        }
    }

    
       
    /**
     * @param args the command line arguments
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton lexicoButton;
    private javax.swing.JButton open;
    private javax.swing.JScrollPane scrollAnalisis;
    private javax.swing.JScrollPane scrollEscritura;
    private javax.swing.JButton sintacticoButton;
    private javax.swing.JTextPane txtAnalisis;
    private javax.swing.JTextPane txtEscritura;
    // End of variables declaration//GEN-END:variables
}
